//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MMG.Core.Testing.Integration.Northwind
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Linq;
    using MMG.Infra.EFPersistence;
    using MMG.Core.Persistence;
    
    
    public partial class NorthwindDB : EFDbContext, IDbContext
    {
        public NorthwindDB()
            : base("name=NorthwindDB")
        {
            this.Configuration.LazyLoadingEnabled = false;
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Category> CategoriesSet { get; set; }
    	
    	IQueryable<Category> Categories
    		{
                get { return this.CategoriesSet; }
    		}
        public virtual DbSet<Customer> CustomersSet { get; set; }
    	
    	IQueryable<Customer> Customers
    		{
                get { return this.CustomersSet; }
    		}
        public virtual DbSet<Employee> EmployeesSet { get; set; }
    	
    	IQueryable<Employee> Employees
    		{
                get { return this.EmployeesSet; }
    		}
        public virtual DbSet<Order_Detail> Order_DetailsSet { get; set; }
    	
    	IQueryable<Order_Detail> Order_Details
    		{
                get { return this.Order_DetailsSet; }
    		}
        public virtual DbSet<Order> OrdersSet { get; set; }
    	
    	IQueryable<Order> Orders
    		{
                get { return this.OrdersSet; }
    		}
        public virtual DbSet<Product> ProductsSet { get; set; }
    	
    	IQueryable<Product> Products
    		{
                get { return this.ProductsSet; }
    		}
        public virtual DbSet<Shipper> ShippersSet { get; set; }
    	
    	IQueryable<Shipper> Shippers
    		{
                get { return this.ShippersSet; }
    		}
        public virtual DbSet<Supplier> SuppliersSet { get; set; }
    	
    	IQueryable<Supplier> Suppliers
    		{
                get { return this.SuppliersSet; }
    		}
    }
}
